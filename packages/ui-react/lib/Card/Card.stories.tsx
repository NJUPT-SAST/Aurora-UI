import type { Meta, StoryObj } from '@storybook/react';
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import React, { useState } from 'react';
import { Card, type CardProps } from './Card';
import { Button } from '../Button/Button';
import { Input } from '../Input/Input';

const meta = {
  title: 'Components/Card',
  component: Card,
  parameters: {
    layout: 'centered',
  },
  tags: ['autodocs'],
  argTypes: {
    theme: {
      options: ['dark', 'light'],
      control: { type: 'select' },
    },
    size: {
      options: ['small', 'medium', 'large'],
      control: { type: 'select' },
    },
    shadow: {
      options: ['regular', 'small', 'medium', 'large', 'extraLarge', 'inner'],
      control: { type: 'select' },
    },
  },
} satisfies Meta<typeof Card>;

export default meta;

type Story = StoryObj<typeof meta>;

const defaultProps: CardProps = {
  titleImage: undefined,
  theme: 'light',
  size: 'medium',
  shadow: 'medium',
  header: <span>header</span>,
  mainContent: <span>content</span>,
  footer: <span>footer</span>,
};

export const DefaultCard: Story = {
  args: {
    ...defaultProps,
  },
};

export const ExampleCard: Story = {
  args: {
    ...defaultProps,
    header: (
      <>
        <h3 style={{ color: 'rgba(128, 128, 128)' }}>SAST</h3>
        <h1>
          基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛
        </h1>
      </>
    ),
    mainContent: (
      <>
        <div>
          基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛
          基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛
          基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛
          基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛
          基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛
          基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛基础知识竞赛
        </div>
      </>
    ),
    footer: (
      <div style={{ display: 'flex', justifyContent: 'flex-end', gap: 20 }}>
        <Button color="danger">cancel</Button>
        <Button>enter</Button>
      </div>
    ),
  },
};

export const LoginCard: Story = {
  args: {
    ...defaultProps,
    header: (
      <>
        <div
          style={{
            display: 'flex',
            flexDirection: 'column',
            padding: '20px',
            paddingTop: '50px',
            gap: '20px',
          }}
        >
          <svg
            width="280"
            viewBox="0 0 726 181"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M130 6H0V136H30V36H130V6Z"
              fill="black"
            />
            <path
              d="M0 151V181H175V51H145V151H0Z"
              fill="black"
            />
            <path
              d="M175 6V36H145V6H175Z"
              fill="black"
            />
            <path
              d="M141 0H181V40H141V0Z"
              fill="#00C853"
            />
            <path
              d="M224.633 57.2109H227.844C228.289 61.2656 231.5 63.7734 236.234 63.7734C241.062 63.7734 244.227 61.1484 244.227 57.1406C244.227 53.9062 242.094 51.8906 237.266 50.6484L234.617 49.9688C228.266 48.3047 225.477 45.4219 225.477 40.5703C225.477 35.0625 229.719 31.4766 236.234 31.4766C242.375 31.4766 246.594 35.0156 246.922 40.4531H243.711C243.242 36.6328 240.477 34.4062 236.234 34.4062C231.547 34.4062 228.758 36.7031 228.758 40.5703C228.758 43.7344 230.773 45.6094 235.461 46.8281L238.203 47.5547C244.789 49.2656 247.508 52.0781 247.508 57.1406C247.508 62.9062 243.031 66.7031 236.234 66.7031C229.508 66.7031 225.031 63.0469 224.633 57.2109Z"
              fill="black"
            />
            <path
              d="M274.953 66L271.648 55.6406H259.367L256.062 66H252.781L263.938 32.1797H267.078L278.234 66H274.953ZM265.484 36.375L260.234 52.875H270.781L265.531 36.375H265.484Z"
              fill="black"
            />
            <path
              d="M283.977 57.2109H287.188C287.633 61.2656 290.844 63.7734 295.578 63.7734C300.406 63.7734 303.57 61.1484 303.57 57.1406C303.57 53.9062 301.438 51.8906 296.609 50.6484L293.961 49.9688C287.609 48.3047 284.82 45.4219 284.82 40.5703C284.82 35.0625 289.062 31.4766 295.578 31.4766C301.719 31.4766 305.938 35.0156 306.266 40.4531H303.055C302.586 36.6328 299.82 34.4062 295.578 34.4062C290.891 34.4062 288.102 36.7031 288.102 40.5703C288.102 43.7344 290.117 45.6094 294.805 46.8281L297.547 47.5547C304.133 49.2656 306.852 52.0781 306.852 57.1406C306.852 62.9062 302.375 66.7031 295.578 66.7031C288.852 66.7031 284.375 63.0469 283.977 57.2109Z"
              fill="black"
            />
            <path
              d="M326.445 66H323.258V35.0859H312.852V32.1797H336.852V35.0859H326.445V66Z"
              fill="black"
            />
            <path
              d="M264.506 128.625C264.506 143.31 256.852 152.062 244.181 152.062C231.51 152.062 223.856 143.31 223.856 128.625V120.531C223.856 105.846 231.51 97.0938 244.181 97.0938C256.852 97.0938 264.506 105.846 264.506 120.531V128.625ZM244.181 142.833C250.553 142.833 253.922 138.036 253.922 128.515V120.641C253.922 111.12 250.553 106.322 244.181 106.322C237.809 106.322 234.44 111.12 234.44 120.641V128.515C234.44 138.036 237.809 142.833 244.181 142.833Z"
              fill="black"
            />
            <path
              d="M272.562 151V110.607H282.267V117.382H282.89C284.867 112.511 289.225 109.765 295.048 109.765C303.837 109.765 308.524 115.038 308.524 124.889V151H298.49V127.27C298.49 121.337 296.11 118.517 291.02 118.517C285.893 118.517 282.56 122.069 282.56 127.672V151H272.562Z"
              fill="black"
            />
            <path
              d="M354.74 151H319.84V143.017H332.658V103.209H320.5V95.2261H342.692V143.017H354.74V151Z"
              fill="black"
            />
            <path
              d="M383.854 102.367C379.752 102.367 377.006 99.8403 377.006 96.0317C377.006 92.2231 379.752 89.6963 383.854 89.6963C387.956 89.6963 390.739 92.2231 390.739 96.0317C390.739 99.8403 387.956 102.367 383.854 102.367ZM401.103 151H366.203V143.017H379.167V118.627H366.862V110.607H388.908V143.017H401.103V151Z"
              fill="black"
            />
            <path
              d="M411.649 151V110.607H421.354V117.382H421.977C423.954 112.511 428.312 109.765 434.135 109.765C442.924 109.765 447.611 115.038 447.611 124.889V151H437.577V127.27C437.577 121.337 435.197 118.517 430.106 118.517C424.979 118.517 421.647 122.069 421.647 127.672V151H411.649Z"
              fill="black"
            />
            <path
              d="M484.745 139.647H494.193C493.351 146.789 486.21 151.879 476.835 151.879C465.08 151.879 458.341 145.287 458.341 133.825V127.343C458.341 116.759 465.666 109.765 476.652 109.765C487.345 109.765 494.193 116.796 494.193 127.636V133.202H468.156V135.399C468.156 140.673 471.562 144.115 476.798 144.115C480.827 144.115 484.013 142.284 484.745 139.647ZM476.469 117.528C471.269 117.528 468.156 121.007 468.156 126.793H484.525C484.525 121.007 481.522 117.528 476.469 117.528Z"
              fill="black"
            />
            <path
              d="M520.854 152.062C510.087 152.062 503.129 145.507 503.092 135.326H513.126C513.236 139.757 516.276 142.65 520.707 142.65C525.541 142.65 528.178 139.721 528.178 134.337V107.091H509.208V98.1558H538.615V134.484C538.615 145.58 532.023 152.062 520.854 152.062Z"
              fill="black"
            />
            <path
              d="M586.698 110.607V151H576.994V144.225H576.371C574.394 149.096 570.036 151.879 564.213 151.879C555.424 151.879 550.736 146.605 550.736 136.754V110.607H560.771V134.337C560.771 140.27 563.151 143.09 568.241 143.09C573.368 143.09 576.701 139.538 576.701 133.971V110.607H586.698Z"
              fill="black"
            />
            <path
              d="M610.612 151.623C601.383 151.623 595.89 145.25 595.89 134.264V127.306C595.89 116.32 601.383 109.948 610.612 109.948C616.435 109.948 620.463 112.658 621.818 117.492H622.55V95.2261H633.024V151H622.697V144.042H621.928C620.536 148.949 616.544 151.623 610.612 151.623ZM614.494 142.943C619.657 142.943 622.807 139.538 622.807 133.971V127.306C622.807 121.74 619.657 118.371 614.494 118.371C609.293 118.371 606.107 121.74 606.107 127.306V133.971C606.107 139.538 609.293 142.943 614.494 142.943Z"
              fill="black"
            />
            <path
              d="M660.307 166.198C649.833 166.198 642.985 161.767 642.326 154.589H652.104C652.799 157.189 656.022 158.837 660.453 158.837C666.276 158.837 669.352 156.2 669.352 151.146V143.2H668.583C667.338 147.741 662.65 150.78 656.645 150.78C647.343 150.78 641.776 144.335 641.776 133.422V127.306C641.776 116.283 647.453 109.948 657.121 109.948C662.98 109.948 667.484 112.914 668.803 117.492H669.535V110.607H679.386V150.963C679.386 160.375 672.099 166.198 660.307 166.198ZM652.03 133.129C652.03 138.622 655.363 142.064 660.6 142.064C665.873 142.064 669.206 138.622 669.206 133.129V127.306C669.206 121.813 665.873 118.371 660.6 118.371C655.363 118.371 652.03 121.85 652.03 127.306V133.129Z"
              fill="black"
            />
            <path
              d="M716.557 139.647H726.005C725.163 146.789 718.021 151.879 708.646 151.879C696.891 151.879 690.153 145.287 690.153 133.825V127.343C690.153 116.759 697.477 109.765 708.463 109.765C719.157 109.765 726.005 116.796 726.005 127.636V133.202H699.967V135.399C699.967 140.673 703.373 144.115 708.61 144.115C712.638 144.115 715.824 142.284 716.557 139.647ZM708.28 117.528C703.08 117.528 699.967 121.007 699.967 126.793H716.337C716.337 121.007 713.334 117.528 708.28 117.528Z"
              fill="black"
            />
          </svg>
          <span style={{ color: '#808080', fontWeight: '600', fontSize: '16px' }}>LOGIN HERE</span>
        </div>
      </>
    ),
    mainContent: (
      <>
        <div
          style={{
            display: 'flex',
            flexDirection: 'column',
            gap: '20px',
            margin: '5px 0',
            width: '100%',
            padding: '0 20px',
            boxSizing: 'border-box',
          }}
        >
          <Input
            onchange={function (value: string) {
              console.log('昵称', value);
            }}
            isFillFather={true}
            label="昵称"
          ></Input>
          <Input
            onchange={function (value: string) {
              console.log('密码', value);
            }}
            label="密码"
            isFillFather={true}
            mode="password"
          ></Input>
          <div style={{ width: '100%', textAlign: 'end' }}>
            <span style={{ color: '#808080', opacity: '0.5' }}>Recover Password?</span>
          </div>
        </div>
      </>
    ),
    footer: (
      <div
        style={{
          display: 'flex',
          justifyContent: 'flex-end',
          gap: 20,
          width: '100%',
          flexDirection: 'column',
          padding: '0 20px',
        }}
      >
        <Button style={{ width: '100%' }}>Sign in</Button>
        <div
          style={{
            display: 'flex',
            flexDirection: 'row',
            justifyContent: 'center',
            alignItems: 'center',
            gap: '10px',
            opacity: '0.5',
          }}
        ></div>
      </div>
    ),
  },
};

export const ImageCard: Story = {
  args: {
    ...defaultProps,
    titleImage: (
      <img src="../../public/sast_test_image/sast-link.png" />
    ) as unknown as HTMLImageElement,
  },
};
